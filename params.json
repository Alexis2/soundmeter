{"name":"SoundMeter","tagline":"Simple real-time sound meter","body":"SoundMeter\r\n==========\r\n\r\n[![soundmeter on pypi](https://img.shields.io/pypi/v/soundmeter.png)](https://pypi.python.org/pypi/soundmeter \"soundmeter on pypi\")\r\n\r\nSoundMeter is a command-line tool to obtain sound power in real time. It\r\nbasically turns the audio recording functionality into a sound meter for\r\nmachines that ship with audio input devices (e.g. microphone). It\r\ncurrently reveals the [root-mean-square (RMS) of sound fragments], which\r\nis a measure of the power in an audio signal. The actual values also\r\ndepend on the system settings of sound input.\r\n\r\n![demo](soundmeter.gif)\r\n\r\nFeatures\r\n--------\r\n\r\n-   A command-line meter that supports triggering upon events\r\n-   Monitor API for backend module programming\r\n\r\nDependencies\r\n------------\r\n\r\n### System packages\r\n\r\nOn Debian/Ubuntu:\r\n\r\n    $ sudo apt-get install portaudio19-dev python-dev alsa-utils\r\n\r\nOn Fedora/RHEL:\r\n\r\n    $ sudo yum install portaudio-devel python-devel alsa-utils\r\n\r\nOn OS X:\r\n\r\n    $ brew install portaudio\r\n\r\n### PyPI packages\r\n\r\n-   argparse\r\n-   pyaudio\r\n-   pydub\r\n-   python-daemon\r\n\r\nInstallation\r\n------------\r\n\r\nYou can install the package with pip using the following command to\r\nallow externally hosted packages:\r\n\r\n    $ pip install soundmeter --allow-all-external --allow-unverified pyaudio\r\n\r\nOr, you can download a source distribution and install with these\r\ncommands:\r\n\r\n    $ python setup.py install\r\n\r\nUsage\r\n-----\r\n\r\nThe simplest usage is to run “soundmeter” from command-line without any\r\noptions:\r\n\r\n    $ soundmeter\r\n\r\nCollect RMS values for 10 seconds so that you will know the sound level\r\nin the current environment:\r\n\r\n    $ soundmeter --collect --seconds 10\r\n    Collecting RMS values...\r\n       154  Timeout\r\n    Collected result:\r\n        min:        152\r\n        max:        211\r\n        avg:        156\r\n\r\nYou can set trigger and action for soundmeter.\r\n\r\nStop the soundmeter if RMS is greater than 211 consecutively for 3\r\ntimes:\r\n\r\n    $ soundmeter --trigger +211 3 --action stop\r\n\r\nExecute `trigger.sh` if RMS is greater than 211:\r\n\r\n    $ soundmeter --trigger +211 --action exec --exec trigger.sh\r\n\r\nExecute `trigger.sh` and stop soundmeter if RMS is less than 152\r\nconsecutively for 3 times:\r\n\r\n    $ soundmeter --trigger -152 3 --action exec-stop --exec trigger.sh\r\n\r\nRun the soundmeter with trigger and action in the background:\r\n\r\n    $ soundmeter --trigger +211 3 --action exec --exec trigger.sh --daemonize\r\n\r\nRun the soundmeter for 2 minutes and log to `meter.log`:\r\n\r\n    $ soundmeter --seconds 120 --log meter.log\r\n\r\n### Command-line Options\r\n\r\nThe “soundmeter” command accepts the following options:\r\n\r\n```\r\n  -c, --collect  collect RMS values to determine thresholds\r\n  -s SECS, --seconds SECS  time in seconds to run the meter (default \r\nforever)\r\n  -a ACTION_TYPE, --action ACTION_TYPE  triggered action (``stop``, \r\n``exec-stop`` and ``exec``)\r\n  -t THRESHOLD, --trigger THRESHOLD  trigger condition (threshold RMS and \r\nan optional number of consecutive triggering times, which defaults 1)\r\n  -e FILE, --execute FILE  shell script to execute upon trigger (defaults \r\nto ``~/.soundmeter/trigger.sh``), can be configured to pass the \"last \r\ntriggering\" RMS value as argument by setting ``rms_as_trigger_arg`` to \r\n``True`` in ~/.soundmeter/config\r\n  -d, --daemonize  run the meter in the background\r\n  --log LOGFILE  log the meter (defaults to ``~/.soundmeter/log``)\r\n  -v, --verbose         verbose mode\r\n  --segment SECONDS  audio segment length recorded in seconds (defaults to \r\n0.5); when specified, it overrides ``audio_segment_length`` in \r\n~/.soundmeter/config\r\n```\r\n\r\n  [root-mean-square (RMS) of sound fragments]: http://docs.python.org/2/library/audioop.html#audioop.rms","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}